% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_fastCall.R
\name{run_fastCall}
\alias{run_fastCall}
\title{\code{Run fastCall on farm}}
\usage{
run_fastCall(ref.fa = "~/dbcenter/Ecoli/reference/Ecoli_k12_MG1655.fasta",
  fastCallpwd = "$HOME/bin/fastCall", bamdir = "/",
  baminfofile = "taxaBamMap.txt", chr = NULL, outdir = "", email = NULL,
  runinfo = c(FALSE, "bigmemh", 1))
}
\arguments{
\item{ref.fa}{The full path of genome with bwa indexed reference fasta file.}

\item{fastCallpwd}{The absolute path of GenomeAnalysisTK.jar.}

\item{bamdir}{The full path of the bam files.}

\item{baminfofile}{Taxa info for bam files, each line contains 1 to N bam files for the taxa.}

\item{chr}{Chr number, i.e. 1, default=NULL, ten chrs will run as 10 array jobs.}

\item{outdir}{The full path of the output files. Note log and shell codes will also put here.}

\item{email}{Your email address that farm will email to once the jobs were done/failed.}

\item{runinfo}{Parameters specify the array job partition information.
A vector of c(FALSE, "bigmemh", "1"): 1) run or not, default=FALSE
2) -p partition name, default=bigmemh and 3) --cpus, default=1.
It will pass to \code{set_array_job}.}
}
\value{
return a batch of shell scripts.
}
\description{
Super fast variant caller for whole genome shotgun (WGS) sequencing data. It works for diploid species,
including both inbreds and outcrossers.
}
\details{
see more details:
\url{https://github.com/Fei-Lu/FastCall}

Prerequisites:
module load java/1.8
Samtools
}
\examples{
bam <- data.frame(taxa=c("t1", "t2"), bam=c("t1_1.bam", "t2.bam"), bam=c("t1_2.bam", ""))
write.table(bam, "test/taxaBamMap.txt", sep="\\t", row.names=FALSE, col.names=FALSE, quote=FALSE )

run_fastCall(ref.fa = "~/dbcenter/Ecoli/reference/Ecoli_k12_MG1655.fasta",
             fastCallpwd = "$HOME/bin/fastCall", bamdir = "$HOME/test",
             baminfofile = "test/taxaBamMap.txt", chr = NULL, outdir = "test",
             email = NULL,
             runinfo = c(FALSE, "bigmemh", 1))

}

